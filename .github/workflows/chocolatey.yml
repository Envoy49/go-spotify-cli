name: Chocolatey deploy

on:
  release:
    types: [created]

jobs:
  Build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Extract Tag Name from Release
        id: extract_version
        run: |
          echo "::set-output name=version::${{ github.event.release.tag_name }}"
          echo "Extracted tag: ${{ github.event.release.tag_name }}"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'
      - name: Build the CLI
        run: |
          cd cmd/gsc
          go build -o go-spotify-cli.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: go-spotify-cli
          path: cmd/gsc/go-spotify-cli.exe

  Package-and-Push:
    needs: Build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: go-spotify-cli
          path: .
      - name: Remove .git directory
        run: |
          if (Test-Path -Path ".git") {
            Remove-Item -Recurse -Force ".git"
          }
      - name: Extract Release Notes
        id: release_notes
        run: |
          $version = "${{ needs.Build.outputs.version }}"
          $version = $version.TrimStart('v')
          $pattern = "## \[$version\](.*?)## \["
          $changelog = Get-Content CHANGELOG.md -Raw
          if ($changelog -match $pattern) {
            $releaseNotes = $matches[1].Trim()
          } else {
            $releaseNotes = "Release notes not available."
          }
          echo "::set-output name=notes::$releaseNotes"
      - name: Update Nuspec File
        run: |
          $version = "${{ needs.Build.outputs.version }}"
          $version = '1.0.23' 
          $nuspecPath = "go-spotify-cli.nuspec"
          [xml]$nuspec = Get-Content $nuspecPath
          
          # Set up namespace manager for the nuspec schema
          $ns = New-Object System.Xml.XmlNamespaceManager($nuspec.NameTable)
          $ns.AddNamespace("ns", "http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd")
          
          # Update the version
          $versionNode = $nuspec.SelectSingleNode("//ns:metadata/ns:version", $ns)
          $versionNode.InnerText = $version
          
          # Function to add or update a node
          Function AddOrUpdateNode($nodeName, $nodeValue) {
            $node = $nuspec.SelectSingleNode("//ns:metadata/ns:$nodeName", $ns)
            if ($node -eq $null) {
              $node = $nuspec.CreateElement($nodeName, "http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd")
              $nuspec.SelectSingleNode("//ns:metadata", $ns).AppendChild($node)
            }
            $node.InnerText = $nodeValue
          }
          
          # Add or update the specified nodes
          AddOrUpdateNode "iconUrl" "https://github.com/Envoy49/go-spotify-cli/blob/main/assets/emoji.png"
          AddOrUpdateNode "licenseUrl" "https://github.com/Envoy49/go-spotify-cli/blob/main/LICENSE"
          AddOrUpdateNode "projectSourceUrl" "https://github.com/Envoy49/go-spotify-cli"
          AddOrUpdateNode "releaseNotes" "${{ steps.release_notes.outputs.notes }}"
          AddOrUpdateNode "summary" "Control Spotify from the command line."
          AddOrUpdateNode "tags" "spotify cli"
          
          # Save the updated nuspec file
          $nuspec.Save($nuspecPath)
          cat $nuspecPath # For debugging
      - name: Prepare files for packaging
        run: |
          New-Item -ItemType Directory -Path .\tools -Force
          Move-Item cmd\gsc\go-spotify-cli.exe .\tools\go-spotify-cli.exe
          @"
          VERIFICATION
          Verification is intended to assist the Chocolatey moderators and community
          in verifying that this package's contents are trustworthy.
          The binaries are built from the source at:
          https://github.com/Envoy
      - name: Pack Chocolatey Package
        run: |
          choco pack go-spotify-cli.nuspec
      - name: Push to Chocolatey
        run: |
          $packageFile = Get-ChildItem -Path . -Filter "go-spotify-cli.*.nupkg" | Select-Object -First 1 -ExpandProperty Name
          if ($packageFile -ne $null) {
            choco apikey --key ${{ secrets.CHOCOLATEY_API_KEY }} --source https://push.chocolatey.org/
            choco push $packageFile --source https://push.chocolatey.org/ --verbose
          } else {
            Write-Host "No .nupkg file found to push."
            exit 1
          }    
